"use client"

import React, { useEffect, useState } from "react";
import Cookies from 'js-cookie'
import { BASEURL } from "../page";

function BookingSuccess(){

    const [appointment, setAppointment] = useState([])
    const [user, setUser] = useState([])
    const [address, setAddress] = useState([])
    const [successful, setSuccessful] = useState(false)

    useEffect(() => {

        //checks user has a customer linked to the session
        const id = Cookies.get('user_id')
        fetch(`${BASEURL}GetAccount/${id}`, { method: 'GET'}).then(
            response =>{
                if(response.ok){
                    response.json().then( data => {
                        setUser(data)
                    })
                }
            }
        )

        //gets address
        const address_id = Cookies.get('address_id')
        fetch( `${BASEURL}GetAddress/${address_id}`).then(
            response => {
                if(response.ok){
                    response.json().then( data =>{
                        setAddress(data)
                    })
                }
            }
        )

        //set constants from cookies to pass into HTTP request
        const date = Cookies.get('date')
        const time = Cookies.get('time')
        const staff_member = ''
        const appointment_type = Cookies.get('appointment-type')
        const product = Cookies.get('product')
        const consultation_id = Cookies.get('consultation-id') || null
        const customer_id = id

        //create appointment
        fetch(`${BASEURL}CreateAppointment`, {method: 'POST', headers:{
            'Content-Type':'application/json'
        }, body: JSON.stringify({
            date, time, staff_member, appointment_type, product, consultation_id, customer_id, address_id
        })
        }).then(
            response => {
                if(response.ok){
                    response.json().then( data => {
                        setAppointment(data)
                        const cookiesToRemove = ['date', 'time', 'appointment-type', 'product', 'consultation-id', 'address_id', 'previous-page']
                        cookiesToRemove.forEach((cookie) => Cookies.remove(cookie))
                        setSuccessful(true)
                    })
                }
                else{
                        response.json().then( data =>
                        {
                            try{
                                //alerts user what data is missing
                                alert(`${data.detail[0].type} ${data.detail[0].loc[1]}`)
                            }
                            catch{
                                alert(data.detail)
                            }
                            })

                }
            }
        )

        //Generated by GitHub Copilot (See asset log)
        const handleBeforeUnload = (event) => {
            event.preventDefault();
            event.returnValue = ''; // Required for modern browsers to show the confirmation dialog
        };
    
        window.addEventListener('beforeunload', handleBeforeUnload);
    
        return () => {
            window.removeEventListener('beforeunload', handleBeforeUnload);
        };

    }, [])

    return(
        <div className="container">
            {successful ? (<div>
                <div className="container">
                    <h1>Booking Successful</h1>
                </div>
                    <div className="grid grid-cols-3 w-full mt-6">
                        <div className="book-div ml-6">
                            <p className=" font-bold">Appointment details</p>
                            <p>Technician: {appointment.staff_member}</p>
                            <p>Date: {appointment.date} </p>
                            <p>Time: {appointment.time}</p>
                            <p>Product: {appointment.product}</p>
                            <p>Appointment Type: {appointment.appointment_type}</p>
                        </div>
                        <div className="book-div">
                            <p className=" font-bold">Your information</p>
                            <p>{user.title}</p>
                            <p>{user.first_name}</p>
                            <p>{user.last_name}</p>
                            <p>{user.email}</p>
                        </div>
                        <div className="book-div">
                            <p className=" font-bold">Your address</p>
                            <p>{address.unit_number}</p>
                            <p>{address.line_1}</p>
                            <p>{address.line_2}</p>
                            <p>{address.city}</p>
                            <p>{address.postcode}</p>
                        </div>
                    </div>
                <div className="container">
                    <h1 className=" mt-5">This information is also sent to your inbox</h1>
                </div>
                </div>) : (<div className="container">
                    <h1>Booking Failed</h1>
                </div>)}
        </div>
    )
}

export default BookingSuccess